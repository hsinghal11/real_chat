// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  pic       String?  @default("https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chatAdmin Chat[]   @relation("GroupAdmins")
  chats     Chat[]   @relation("UserChats")
  readMessages Message[] @relation("MessageReadBy")
  messages  Message[] 
}

model Chat {
  id            Int      @id @default(autoincrement())
  chatName      String
  isGroupChat   Boolean  @default(false)
  latestMessage String?
  roomId        String   @unique @default(uuid())
  groupPic      String?  @default("https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg")
  groupAdmins   User[]   @relation("GroupAdmins")
  users         User[]   @relation("UserChats")
  messages      Message[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Message {
  id            Int     @id @default(autoincrement())
  senderId       Int
  sender         User @relation(fields: [senderId], references: [id])
  chatId       Int
  chat          Chat @relation(fields: [chatId], references: [id])
  content       String
  readBy        User[] @relation("MessageReadBy")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}